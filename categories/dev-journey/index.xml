<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dev Journey on Tuan Truong&#39;s Blog</title>
    <link>https://tqtuan1201.github.io/categories/dev-journey/</link>
    <description>Recent content in Dev Journey on Tuan Truong&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 09 Aug 2023 11:40:45 +0700</lastBuildDate><atom:link href="https://tqtuan1201.github.io/categories/dev-journey/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Understand View in SwiftUI</title>
      <link>https://tqtuan1201.github.io/posts/job/ios/swiftui/uiview-vs-view/</link>
      <pubDate>Wed, 09 Aug 2023 11:40:45 +0700</pubDate>
      
      <guid>https://tqtuan1201.github.io/posts/job/ios/swiftui/uiview-vs-view/</guid>
      
        <description>Abstract In this article, we will learn about view in SwiftUI. This article is part of the SwiftUI Series - SwiftUI Series - Updating TTBaseUIKit to support SwiftUI
 View is a function of state, not a sequence of events - apple
  Woaaaa !
 SwiftUI - Apple&amp;rsquo;s declarative framework for building user interfaces. The user interface is defined based on the current state of the application, and any changes to the state automatically update the corresponding views.</description>
      
    </item>
    
    <item>
      <title>Understand safe area in SwiftUI</title>
      <link>https://tqtuan1201.github.io/posts/job/ios/swiftui/understand-safearea/</link>
      <pubDate>Wed, 05 Jul 2023 11:21:48 +0700</pubDate>
      
      <guid>https://tqtuan1201.github.io/posts/job/ios/swiftui/understand-safearea/</guid>
      
        <description>Abstract In this article, we will learn about Safe Area in SwiftUI. This article is part of the SwiftUI Series - SwiftUI Series - Updating TTBaseUIKit to support SwiftUI
 Related knowledge What is the Layout? In the Apple ecosystem, Layout refers to the process of arranging and positioning user interface elements such as views and controls on a screen or within a container view using layout constraints, Auto Layout, or SwiftUI.</description>
      
    </item>
    
    <item>
      <title>WWDC23 from the perspective of an iOS developer</title>
      <link>https://tqtuan1201.github.io/posts/job/ios/swiftui/wwdc23/</link>
      <pubDate>Mon, 12 Jun 2023 15:42:34 +0700</pubDate>
      
      <guid>https://tqtuan1201.github.io/posts/job/ios/swiftui/wwdc23/</guid>
      
        <description>Abstract WWDC23 - Code new worlds - Since the event took place, I have been following updates on SwiftUI. It demonstrates the importance of SwiftUI in Apple&amp;rsquo;s ecosystem. And more than just a new product, Vision Pro shows a direction for the future, which could change the way we interact, communicate, and work. It takes time for this product to prove itself - a revolutionary product like the iPhone or not?</description>
      
    </item>
    
    <item>
      <title>SwiftUI Series - Updating TTBaseUIKit to support SwiftUI</title>
      <link>https://tqtuan1201.github.io/posts/job/ios/swiftui/ttbaseuikitswiftuiserial/</link>
      <pubDate>Mon, 29 May 2023 16:05:16 +0700</pubDate>
      
      <guid>https://tqtuan1201.github.io/posts/job/ios/swiftui/ttbaseuikitswiftuiserial/</guid>
      
        <description>Abstract InfoSwiftUI: It’s the future   I realize that now is a suitable time to learn and apply SwiftUI in the real world. So in this series, I will delve into the fundamental components of SwiftUI. With the knowledge gained, we will update TTBaseUIKit to support SwiftUI, allowing us to quickly build applications using these basic components. Additionally, we will develop a new feature called &amp;lsquo;Bus Booking&amp;rsquo; using SwiftUI on the 12Bay application.</description>
      
    </item>
    
    <item>
      <title>How to design the food selection in a mobile application</title>
      <link>https://tqtuan1201.github.io/posts/devlife-12bay-food/</link>
      <pubDate>Mon, 03 Apr 2023 14:00:33 +0700</pubDate>
      
      <guid>https://tqtuan1201.github.io/posts/devlife-12bay-food/</guid>
      
        <description>Long time no see! Just keep doing it and you&amp;rsquo;ll reach your goals.
 Abstract So, today we will be discussing about how to design the food selection in a mobile application. In this post, we will explore
 Improve your mindset about developing applications. Working on Swift, Sketch.  Let&amp;rsquo;s do it.
 What is the purpose of the function? The main purpose is to provide more utility to customers using the 12bay application.</description>
      
    </item>
    
    <item>
      <title>How to Update Current Cocoapod Lib to Support SwiftPM</title>
      <link>https://tqtuan1201.github.io/posts/how-to-update-cocoapod-lib-to-support-swiftpm/</link>
      <pubDate>Wed, 24 Aug 2022 11:10:07 +0700</pubDate>
      
      <guid>https://tqtuan1201.github.io/posts/how-to-update-cocoapod-lib-to-support-swiftpm/</guid>
      
        <description>Abstract Today we will discuss how to update the cocoapod library to support SwiftPM. Last week, I updated my TTBaseUIkit library to support Swift Package Manager. So I want to share some useful experience with you.
What is Swift Package Manager? First, if you don&amp;rsquo;t know about Swift Package Manager. I thought you read swiftpm-post to understand about this package.
 The Swift Package Manager is a tool for managing the distribution of Swift code.</description>
      
    </item>
    
    <item>
      <title>Swift Package Manager (SwiftPM) vs Cocoapods</title>
      <link>https://tqtuan1201.github.io/posts/cocoapods-with-swiftpm/</link>
      <pubDate>Mon, 22 Aug 2022 16:21:09 +0700</pubDate>
      
      <guid>https://tqtuan1201.github.io/posts/cocoapods-with-swiftpm/</guid>
      
        <description>Abstract Today we will talk about dependency managers in iOS and compare their advantages and disadvantages. Finally, we learn how to use those to add dependencies to your project.
Dependencies When we build applications, we often use code from other developers writing to build more powerful applications more quickly. In your projects, we can make an easy animation to hide or show the button. But if you want to add a complex animation to your project that’s not built-in.</description>
      
    </item>
    
    <item>
      <title>TTBaseUIKit - Framework to build UI programmatically</title>
      <link>https://tqtuan1201.github.io/posts/ttbaseuikit-ui-framework/</link>
      <pubDate>Tue, 12 Jul 2022 16:50:03 +0700</pubDate>
      
      <guid>https://tqtuan1201.github.io/posts/ttbaseuikit-ui-framework/</guid>
      
        <description>Abstract When I work with many projects. I always ask myself how to optimize the application, reusable code and how to develop the fastest and most efficient applications. So after two years of working with Swift language. I created the framework to build UI programmatically. With TTBaseUIKit, you can build apps in the fastest and most efficient way. A few points to note when you apply this framework:
 How to set up the framework Basic config settings Usage example  Introduction I have been building framework for 5 years and for now, I still update new functions.</description>
      
    </item>
    
    <item>
      <title>Apple Watch Serial Summary</title>
      <link>https://tqtuan1201.github.io/posts/apple-watch-serial-end/</link>
      <pubDate>Wed, 22 Jun 2022 13:42:23 +0700</pubDate>
      
      <guid>https://tqtuan1201.github.io/posts/apple-watch-serial-end/</guid>
      
        <description>Abstract In this post, I will summarize some of my knowledge about developing an application on Apple Watch by SwiftUI language
 Motivation Should You Learn SwiftUI or UIKit? Does SwiftUI replace UIKit? Resources  Motivation The rise in wearable technology is very significant around the world. In 2022 App developers and businesses should get ready with apps that provide excellent digital experiences to users on wearables, to gain a distinct edge over those who do not.</description>
      
    </item>
    
    <item>
      <title>Apple Watch Serial My Notification</title>
      <link>https://tqtuan1201.github.io/posts/apple-watch-serial-my-notification/</link>
      <pubDate>Mon, 20 Jun 2022 13:36:52 +0700</pubDate>
      
      <guid>https://tqtuan1201.github.io/posts/apple-watch-serial-my-notification/</guid>
      
        <description>Last week was my daughter birthday. I had a happy time with my family and now, focus to work
Abstract Today, we will create a notification screen and learn how to use the Core Data framework with SwiftUI to store data. In this post, we will explore:
  Working on SwiftUI.
  How Core Data and SwiftUI work together
  Creating and updating Core Data objects
  How to update views when stored data gets updated</description>
      
    </item>
    
    <item>
      <title>Apple Watch Serial - My Order Detail Screen</title>
      <link>https://tqtuan1201.github.io/posts/apple-watch-serial-order-detail/</link>
      <pubDate>Wed, 08 Jun 2022 16:54:01 +0700</pubDate>
      
      <guid>https://tqtuan1201.github.io/posts/apple-watch-serial-order-detail/</guid>
      
        <description>Abstract Today, we will create an order detail UI screen and update data for this. This view to show all informations about order, e.g. booking ID, departing, arriving. Through this post, you can learn some knowledge such as:
  Working on SwiftUI.
  Understand the List, ZStack, TabView element.
  Understand a navigation presentation NavigationView, NavigationLink.
  This article is part of my Apple Watch by SwiftUI series.</description>
      
    </item>
    
    <item>
      <title>Apple Watch Serial - My Order Screen</title>
      <link>https://tqtuan1201.github.io/posts/apple-watch-serial-my-order-p1-design/</link>
      <pubDate>Tue, 31 May 2022 14:59:52 +0700</pubDate>
      
      <guid>https://tqtuan1201.github.io/posts/apple-watch-serial-my-order-p1-design/</guid>
      
        <description>Today is a International Children&amp;rsquo;s Day. So, My wife and I bought a great gift for my daugher. It&amp;rsquo;s a beautiful life. In daily life, I always looking for ways to make my life more fun and interesting ^^
Abstract Last post, We completed the home screen. Today, We will focus to design the my order and update data from iPhone app. Some of the main ideas you can got throught this post:</description>
      
    </item>
    
    <item>
      <title>Apple Watch Serial P2 Homescreen Complete</title>
      <link>https://tqtuan1201.github.io/posts/apple-watch-serial-p2-homescreen-complete/</link>
      <pubDate>Mon, 30 May 2022 13:05:20 +0700</pubDate>
      
      <guid>https://tqtuan1201.github.io/posts/apple-watch-serial-p2-homescreen-complete/</guid>
      
        <description>Abstract Today, We will complete the homescreen. In this part, we just add background images and events for the elements view. Here are some keys you will get through this post:
 Using ZStack to set full background image. Make calls from the watch application.  This article is part of my Apple Watch by SwiftUI series.
 Complete Home screen UI design Add background images We will using Zstack .</description>
      
    </item>
    
    <item>
      <title>Apple Watch Serial P2 Homescreen Connect</title>
      <link>https://tqtuan1201.github.io/posts/apple-watch-serial-p2-homescreen-connect/</link>
      <pubDate>Fri, 13 May 2022 15:01:56 +0700</pubDate>
      
      <guid>https://tqtuan1201.github.io/posts/apple-watch-serial-p2-homescreen-connect/</guid>
      
        <description>Abstract Today, we will to work on the home screen. In this post, we will focus on communication between an iOS app with watchOS app. Here are some keys you will get through this topic:
 Understand Watch Connectivity. The fundamental component in SwiftUI Have knowledge about WCSession Have basic knowledge about data flow in SwiftUI  This article is part of my Apple Watch by SwiftUI series.
Previously : Apple Watch Serial P1 Homescreen</description>
      
    </item>
    
    <item>
      <title>Apple Watch Serial P1 Homescreen</title>
      <link>https://tqtuan1201.github.io/posts/apple-watch-serial-p1-homescreen/</link>
      <pubDate>Wed, 04 May 2022 14:38:52 +0700</pubDate>
      
      <guid>https://tqtuan1201.github.io/posts/apple-watch-serial-p1-homescreen/</guid>
      
        <description>Abstract I have a long holiday with my family in my hometown. So it&amp;rsquo;s a beautiful life. Today, we begin to code a home screen. In this post, We will learn to use basic SwiftUI to build UIs for apple watch application. Here are some keys you will get through this topic:
  Create a new watchOS target inside of our existing iOS project.
  Understand the WatchKit App.</description>
      
    </item>
    
    <item>
      <title>Let&#39;s idea, how to design travel app (12Bay) on watchOS?</title>
      <link>https://tqtuan1201.github.io/posts/apple-watch-serial-design/</link>
      <pubDate>Wed, 20 Apr 2022 17:39:16 +0700</pubDate>
      
      <guid>https://tqtuan1201.github.io/posts/apple-watch-serial-design/</guid>
      
        <description>Abstract Before we start to code. We should think about What is a purple of the application?
Currently, We have multiple apps on macOS, iOS and ipadOS. With an app on watchOS, what needs should it meet? Find it out, and let&amp;rsquo;s design. This article talk about 12bay UI/UX on watchos
This article is part of my Apple Watch by SwiftUI series.
Previously : Let&amp;rsquo;s Idea, How to Design Travel App (12Bay) on WatchOS?</description>
      
    </item>
    
    <item>
      <title>Apple Watch Series</title>
      <link>https://tqtuan1201.github.io/posts/apple-watch-serial/</link>
      <pubDate>Tue, 12 Apr 2022 14:49:56 +0700</pubDate>
      
      <guid>https://tqtuan1201.github.io/posts/apple-watch-serial/</guid>
      
        <description>Abstract In this part, I started to learn about SwiftUI to build apple watch app for 12bay app.Through this part, the desired result is to build 12bay application for apple watch and learn about new knowledge such as SwiftUI, Combine framework in the field of Wearable App Integration.
Completing this section, we must know the following knowledge:
  Have knowledge about SwiftUI.
  Have knowledge about Combine framework</description>
      
    </item>
    
    <item>
      <title>What Is the Future of Mobile App Development</title>
      <link>https://tqtuan1201.github.io/posts/what-is-the-future-of-mobile-app-development/</link>
      <pubDate>Wed, 06 Apr 2022 16:05:26 +0700</pubDate>
      
      <guid>https://tqtuan1201.github.io/posts/what-is-the-future-of-mobile-app-development/</guid>
      
        <description>💡 What is the future of mobile app development?  A new year has started and most of us are probably figuring out what we should focus on this year. Whether it’s learning new things or expanding our knowledge on topics we’ve already learned about in the past, there’s always something that deserves our attention in the world of iOS development.
 As per the statistics, over 5 million apps are available in Google Play Store and Apple App Store.</description>
      
    </item>
    
    <item>
      <title>Natural Language Processing On Ios Application Implement Viper Clean Architecture In An Ios App</title>
      <link>https://tqtuan1201.github.io/posts/nlp-on-ios-application-viper-arch/</link>
      <pubDate>Sat, 19 Mar 2022 13:11:55 +0700</pubDate>
      
      <guid>https://tqtuan1201.github.io/posts/nlp-on-ios-application-viper-arch/</guid>
      
        <description>Abstract Xây dựng ứng dụng iOS với kiến trúc VIPER về dự đoán tác giả bài thơ. Input đầu vào là một đoạn text đoạn thơ người dùng nhập vào và output là tác giả của đoạn thơ đó. Ví dụ: INPUT = Sao anh không về chơi thôn Vĩ? → OUTPUT = Hàn Mặc Tử
  Tìm hiểu về Bag of Words, Turi Create. Xây dựng ứng dụng iOS trên kiến trúc VIPER Clean Architecture Một số từ khóa liên quan: Bag of Word, Logictic Classifier, Turi Create VIPER, iOS Application     Đặt Vấn Đề INPUT STRING:</description>
      
    </item>
    
    <item>
      <title>Basic Ci Cd Gitlab Fastlane</title>
      <link>https://tqtuan1201.github.io/posts/basic-ci-cd-gitlab-fastlane/</link>
      <pubDate>Fri, 25 Feb 2022 10:38:57 +0700</pubDate>
      
      <guid>https://tqtuan1201.github.io/posts/basic-ci-cd-gitlab-fastlane/</guid>
      
        <description>Abstract Trong bài viết này mình tiềm hiểu về GitLab-CI, Fastlane ở mức cơ bản.
   Tìm hiểu GitLab-CI.
  Fastlane là gì?
   What is CI? Trong quá trình làm việc theo nhóm việc quản lý source-code giữa các thành viên với nhau là cực kỳ quan trọng. Việc cập nhật mã code giữa các thành viên với nhau là rất thường xuyên. Việc này dẫn đến nhiều vấn đề nảy sinh như code lỗi,&amp;hellip; để phát hiện sớm các lỗi để sửa ngay đưa ra một khái niệm là Continuos Integration - Tích hợp liên tục</description>
      
    </item>
    
    <item>
      <title>The VIPER Architecture</title>
      <link>https://tqtuan1201.github.io/posts/my-first-post/</link>
      <pubDate>Sat, 01 Jan 2022 15:58:30 +0700</pubDate>
      
      <guid>https://tqtuan1201.github.io/posts/my-first-post/</guid>
      
        <description>Architecture Just like MVC or MVVM, VIPER is a design pattern created to facilitate the development by creating layers of abstraction and isolation of concerns, creating a cleaner code, and bringing more maintainability further down the road
VIPER is an acronym for View-Interactor-Presenter-Entity-Router. Each functionality or module must be defined by these five components.
View It’s what the user sees, the view that represents a functionality. In some cases, a single functionality can have multiple views, for example, an onboarding flow with multiple steps.</description>
      
    </item>
    
  </channel>
</rss>