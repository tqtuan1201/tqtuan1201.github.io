<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Best Practices and Tips on Tuan Truong&#39;s Blog</title>
    <link>https://tqtuan1201.github.io/categories/best-practices-and-tips/</link>
    <description>Recent content in Best Practices and Tips on Tuan Truong&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 13 Dec 2023 15:31:00 +0700</lastBuildDate><atom:link href="https://tqtuan1201.github.io/categories/best-practices-and-tips/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Rebuiding train booking feature by SwiftUI in 12Bay application - Design</title>
      <link>https://tqtuan1201.github.io/posts/job/ios/swiftui/12bay-train-v2/</link>
      <pubDate>Wed, 13 Dec 2023 15:31:00 +0700</pubDate>
      
      <guid>https://tqtuan1201.github.io/posts/job/ios/swiftui/12bay-train-v2/</guid>
      
        <description>Abstract Today, we are continuing our journey of learning SwiftUI by rebuilding the train booking feature in the 12Bay application. This function is designed to help users find trains that are available for their desired departure and arrival stations. Once users find their preferred train, the app will show them which seats are available for that specific journey. Users can then choose their preferred seat type, like window or aisle seats, and select the number of tickets they want to book.</description>
      
    </item>
    
    <item>
      <title>What is the Spacer and how do we use it in SwiftUI</title>
      <link>https://tqtuan1201.github.io/posts/job/ios/swiftui/swiftui-spacer/</link>
      <pubDate>Sat, 14 Oct 2023 16:05:43 +0700</pubDate>
      
      <guid>https://tqtuan1201.github.io/posts/job/ios/swiftui/swiftui-spacer/</guid>
      
        <description>Abstract In this article, we will learn about Spacer in SwiftUI. We will dive into the world of Spacer. Exploring their purpose, functionality and practical applications. This article is part of the SwiftUI Series - SwiftUI Series - Updating TTBaseUIKit to support SwiftUI
What is the Spacer? The Spacer is a layout view that expands to fill available space within a container.
Here is the definition from Apple. You can view full details at developer.</description>
      
    </item>
    
    <item>
      <title>12Bay integrated SwiftUI. With 12Bay, no StoryBoard, no XIB files, no cocoapods, ...</title>
      <link>https://tqtuan1201.github.io/posts/job/ios/swiftui/12bay-bus-v2/</link>
      <pubDate>Mon, 18 Sep 2023 15:37:02 +0700</pubDate>
      
      <guid>https://tqtuan1201.github.io/posts/job/ios/swiftui/12bay-bus-v2/</guid>
      
        <description>Bus booking function write by SwiftUI For three months, I dedicated myself to learning SwiftUI and using it to develop a bus booking feature. Along the way, I faced several challenges in integrating SwiftUI into an existing UIKit-based project. In my upcoming articles, I will dive deep into these challenges, providing detailed insights and solutions. But first, let&amp;rsquo;s explore the user interface for booking a ride, which includes selecting a bus route, choosing seats, and specifying pickup/drop-off points.</description>
      
    </item>
    
    <item>
      <title>Understand View in SwiftUI</title>
      <link>https://tqtuan1201.github.io/posts/job/ios/swiftui/uiview-vs-view/</link>
      <pubDate>Wed, 09 Aug 2023 11:40:45 +0700</pubDate>
      
      <guid>https://tqtuan1201.github.io/posts/job/ios/swiftui/uiview-vs-view/</guid>
      
        <description>Abstract In this article, we will learn about view in SwiftUI. This article is part of the SwiftUI Series - SwiftUI Series - Updating TTBaseUIKit to support SwiftUI
View is a function of state, not a sequence of events - apple
Woaaaa !
SwiftUI - Apple&amp;rsquo;s declarative framework for building user interfaces. The user interface is defined based on the current state of the application, and any changes to the state automatically update the corresponding views.</description>
      
    </item>
    
    <item>
      <title>Understand safe area in SwiftUI</title>
      <link>https://tqtuan1201.github.io/posts/job/ios/swiftui/understand-safearea/</link>
      <pubDate>Wed, 05 Jul 2023 11:21:48 +0700</pubDate>
      
      <guid>https://tqtuan1201.github.io/posts/job/ios/swiftui/understand-safearea/</guid>
      
        <description>Abstract In this article, we will learn about Safe Area in SwiftUI. This article is part of the SwiftUI Series - SwiftUI Series - Updating TTBaseUIKit to support SwiftUI
Related knowledge What is the Layout? In the Apple ecosystem, Layout refers to the process of arranging and positioning user interface elements such as views and controls on a screen or within a container view using layout constraints, Auto Layout, or SwiftUI.</description>
      
    </item>
    
    <item>
      <title>Basic Ci Cd Gitlab Fastlane</title>
      <link>https://tqtuan1201.github.io/posts/basic-ci-cd-gitlab-fastlane/</link>
      <pubDate>Fri, 25 Feb 2022 10:38:57 +0700</pubDate>
      
      <guid>https://tqtuan1201.github.io/posts/basic-ci-cd-gitlab-fastlane/</guid>
      
        <description>Abstract Trong bài viết này mình tiềm hiểu về GitLab-CI, Fastlane ở mức cơ bản.
Tìm hiểu GitLab-CI.
Fastlane là gì?
What is CI? Trong quá trình làm việc theo nhóm việc quản lý source-code giữa các thành viên với nhau là cực kỳ quan trọng. Việc cập nhật mã code giữa các thành viên với nhau là rất thường xuyên. Việc này dẫn đến nhiều vấn đề nảy sinh như code lỗi,&amp;hellip; để phát hiện sớm các lỗi để sửa ngay đưa ra một khái niệm là Continuos Integration - Tích hợp liên tục</description>
      
    </item>
    
  </channel>
</rss>